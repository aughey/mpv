/** <pre>
 *  The Multi-Purpose Viewer
 *  Copyright (c) 2004 The Boeing Company
 *  
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *  
 *  
 *  FILENAME:	PluginSyncedRandomNumbers.h
 *  LANGUAGE:	C++
 *  CLASS:		UNCLASSIFIED
 *  PROJECT:	 Multi-Purpose Viewer
 *  
 *  PROGRAM DESCRIPTION: 
 *  This class contains the data and methods necessary to
 *  generate pseudo-random numbers in a synchronized manner.
 *  
 *  MODIFICATION NOTES:
 *  DATE	  NAME										  SCR NUMBER
 *  DESCRIPTION OF CHANGE........................
 *  
 *  05/06/2004 Andrew Sampson							  MPV_CR_DR_1
 *  Initial Release.
 *
 *  2007-07-21 Andrew Sampson
 *      Changed interface to use new state machine API
 *
 * </pre>
 *  The Boeing Company
 *  1.0
 */


#ifndef PLUGIN_SYNCRANDNUM_H
#define PLUGIN_SYNCRANDNUM_H

#include <string>
#include <iostream>

#include "Plugin.h"
#include "AllCigi.h"

#include "IGCtrlP.h"
#include "RandGenerateID.h"



//=========================================================
//! Generates pseudo-random numbers in a synchronized manner.  Provides this 
//! service to the other plugins via the blackboard.
//!
class PluginSyncedRandomNumbers : public Plugin 
{
public:

	//=========================================================
	//! General Constructor
	//!
	PluginSyncedRandomNumbers();

	//=========================================================
	//! General Destructor
	//!
	virtual ~PluginSyncedRandomNumbers() throw();

	//=========================================================
	//! The per-frame processing that this plugin performs
	//! \param state - The current system state
	//! \param stateContext - an object containing all the variables which 
	//!     influence state transitions
	//!
	virtual void act( SystemState::ID state, StateContext &stateContext );
	
private:
	

	//=========================================================
	//! The Cigi incoming message object.  Retrieved from the blackboard.
	//!
	CigiIncomingMsg *ImsgPtr;
	
	//=========================================================
	//! The Cigi IG control packet processor object.  Grabs the frame number.
	//!
	SyncRNIGCtrlP igCtrlP;
	
	//=========================================================
	//! The current frame number, as reported by the host
	//!
	unsigned int frameNumber;
	
	//=========================================================
	//! Our synced random number generator.  Posted to the blackboard.
	//!
	RandGenerateID randGen;
	
	//=========================================================
	//! The largest value generated by our synced random number generator.  
	//! Posted to the blackboard.
	//!
	int randGenMax;
};



#endif

