/** <pre>
 *  The Multi-Purpose Viewer
 *  Copyright (c) 2004 The Boeing Company
 *  
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *  
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *  
 *  
 *  FILENAME:   IGToHostSignalProc.h
 *  LANGUAGE:   C++
 *  CLASS:      UNCLASSIFIED
 *  PROJECT:    Multi-Purpose Viewer
 *  
 *  PROGRAM DESCRIPTION: 
 *  This class contains the data and methods necessary to
 *  
 *  
 *  MODIFICATION NOTES:
 *  DATE     NAME                                SCR NUMBER
 *  DESCRIPTION OF CHANGE........................
 *  
 *  07/28/2004 Andrew Sampson                       MPV_CR_DR_1
 *  Initial Release.
 * </pre>
 *  The Boeing Company
 *  1.0
 */


#ifndef IGTOHOSTSIGNALPROC_H
#define IGTOHOSTSIGNALPROC_H

#include <stdio.h>
#include <list>

#include "AllCigi.h"
#include "WildcardSignalProcessor.h"



//=========================================================
//! 
//!
class IGToHostSignalProc : public WildcardSignalProcessor
{
public:


	//==> Management

	//=========================================================
	//! General Constructor
	//!
	IGToHostSignalProc();

	//=========================================================
	//! General Destructor
	//!
	virtual ~IGToHostSignalProc();


	//==> Basic handler initialization and functionality


	//=========================================================
	//! Initializes the pointer to the cigi outgoing message object
	//! \param com - The pointer to the cigi outgoing message object
	//!
	void setOutgoingMsg( CigiOutgoingMsg *com ) { OmsgPtr = com; }

	//=========================================================
	//! Sets the isMaster flag.  Any IGToHostSignalProc which has this flag set to 
	//! true will attempt to send a SOF to the host when a SOF is generated by the 
	//! corresponding IG.  It is strongly encouraged that only one channel is flagged 
	//! as master.
	//! \param val - the new value for isMaster
	//!
	void setMaster( bool val ) { isMaster = val; }
	
	void setSendNetMessagesCB( void (*funcPtr)(void) ) { sendNetMessagesCB = funcPtr; }


	//=========================================================
	//! The handler for CIGI packets sent by the IG.
	//! \param Packet - The pointer to the packet object.
	//!
	virtual void OnAnyIGToHost(CigiBasePacket *Packet);


private:
	

	//=========================================================
	//! A pointer to the outgoing message queue.
	//!
	CigiOutgoingMsg *OmsgPtr;
	
	//=========================================================
	//! The function pointer for sending SOF.  
	//! 
	void (*sendNetMessagesCB)(void);

	bool isMaster;
};

#endif 
